<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>Epic</title><link rel="stylesheet" type="text/css" href="../styles/layout.css" /><link rel="stylesheet" type="text/css" href="../styles/screen.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" id="metaFilename" content="N_Epic" /><link rel="icon" href="/favicon.ico" /><link rel="alternate" type="application/atom+xml" title="Development log" href="/atom.xml" /><!--[if !IE 7]>
    <style type="text/css">
		#epic-wrap {display:table;height:100%}
	</style>
  <![endif]--><!--[if lt IE 8]>
    <style type="text/css">
        #epic-header {padding-top: 9px}
    </style>
  <![endif]--><!--[if IE 8]>
    <style type="text/css">
		#epic-wrap {width:100%}
	</style>
  <![endif]-->
</head><body><div id="epic-wrap"><div id="epic-header"><a href="https://github.com/bards/Epic.NET"><img style="position: absolute; top: 0; left: 0; border: 0;" src="http://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png" alt="Fork me on GitHub" /></a><a class="title" href="/">Epic</a><span>dominant domains</span></div><div id="epic-main"><div id="epic-content"><ul class="epic-menu"><li><a href="/index.html">Overview</a></li><li><a href="/roadmap.html">Roadmap</a></li><li><a href="/blog.html" title="Development blog">Blog</a></li><li><a href="/doc/index.html">Documentation</a></li><li><a href="https://github.com/bards/Epic.NET/archives/master">Download</a></li><li><a href="/license.html">License</a></li><li><a href="/credits.html">Bards</a></li></ul><div id="epic-api"><div id="control"><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Documentation.htm">API</a> ► <span class="selflink">Epic</span></span></div><br /><span class="topicTitle">Epic</span></div><div id="main"><span style="color: DarkGray"></span><div class="summary">The <b>Epic</b> namespace contains fundamental concepts that all Domain Driven applications built with the Epic's modeling patterns in mind will require.<br /><br />

Epic.Prelude defines here <a href="T_Epic_IVisitable.htm">IVisitable</a> interface and the <a href="http://epic.tesio.it/doc/manual/epic-prelude.html#about_interpreting_values">composite visitor pattern</a>.
Epic.Core defines the <a href="T_Epic_Enterprise.htm">Enterprise</a> entry point to the domain model.</div><div class="section"><div class="sectionTitle">Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">Epic</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle">Types</div><div class="sectionContent"><div id="typeSection"><table class="filter"><tr class="tabs" id="typeFilter"><td class="tab" value="all" onclick="toggleClass('typeFilter','value','all','activeTab','tab'); processSubgroup('all', 'type'); processList('typeList','filterElement', 'type');">All Types</td><td class="tab" value="class" onclick="toggleClass('typeFilter','value','class','activeTab','tab'); processSubgroup('class', 'type'); processList('typeList','filterElement','type');">Classes</td><td class="tab" value="interface" onclick="toggleClass('typeFilter','value','interface','activeTab','tab'); processSubgroup('interface', 'type'); processList('typeList','filterElement','type');">Interfaces</td></tr></table><table id="typeList" class="members"><tr><th class="iconColumn" /><th class="nameColumn">Type</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_CompositeVisitor_1.htm">CompositeVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Visitors' composition. It uses composition to handle the visit of any type of expression tree.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_CompositeVisitorBase_2.htm">CompositeVisitorBase<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult, TExpression<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Visitors' composition base class. This class must be derived from concrete compositions.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_Enterprise.htm">Enterprise</a></b></td><td><div class="summary">
            Enterprise entry point. It MUST be initialized once.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_EnterpriseBase.htm">EnterpriseBase</a></b></td><td><div class="summary">
            Enterprise base class, to be injected in <a href="T_Epic_Enterprise.htm">Enterprise</a> during initialization.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_EpicException.htm">EpicException</a></b></td><td><div class="summary">
            Base ancestor for all the infrastructural exceptions in the Epic's ecosystem.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IEnvironment.htm">IEnvironment</a></b></td><td><div class="summary">
            Environment of the running enterprise.
            It will provide informations useful for the enterprise, but not belonging to the domain.
            Obviously, no domain class should depend on either the environment or the tools 
            it provide: the domain model have to be coded, not configured.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_InstanceName_1.htm">InstanceName<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TObject<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Name to identify any instance of a given type (when the type has no identity
            by itself, like an int, a logger or a db connection).
            It could be used as a key on a <span class="nolink">Hashtable</span>.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IOrganization.htm">IOrganization</a></b></td><td><div class="summary">
            Model of the organization. It is the domain model entry point.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IRepository_2.htm">IRepository<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TEntity, TIdentity<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Common interface of repositories.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IVisitable.htm">IVisitable</a></b></td><td><div class="summary">
            Visitable objects.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IVisitContext.htm">IVisitContext</a></b></td><td><div class="summary">
            Context of a visit.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IVisitor_1.htm">IVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Visitor producing a <span class="typeparameter">TResult</span>.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IVisitor_2.htm">IVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult, TExpression<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Visitor that knows how to visit a <span class="typeparameter">TExpression</span>.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="T_Epic_IWorkingSession.htm">IWorkingSession</a></b></td><td><div class="summary">
            A user working session. It can be created or disposed by <a href="T_Epic_IOrganization.htm">IOrganization</a></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_NonExhaustiveVisitorException.htm">NonExhaustiveVisitorException</a></b></td><td><div class="summary">
            Exception thrown when a visitor composition is can not visit an expression that it's intended to visit.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_NonExhaustiveVisitorException_1.htm">NonExhaustiveVisitorException<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TExpression<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Exception thrown when a visitor composition can not handle an expression that it is intended to visit.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_ObserverBase_1.htm">ObserverBase<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TEntity<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Base class for entities' observers. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_UnvisitableExtensions.htm">UnvisitableExtensions</a></b></td><td><div class="summary">
            Defines a set of extension methods that make some common type hierarchies
            suitable for visit by a <a href="T_Epic_IVisitor_1.htm">IVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_VisitableBase.htm">VisitableBase</a></b></td><td><div class="summary">
            Base class for visitable expressions.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_VisitContext.htm">VisitContext</a></b></td><td><div class="summary">
            Visit context.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="T_Epic_CompositeVisitor_1_VisitorBase.htm">CompositeVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TResult<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span><span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>VisitorBase</a></b></td><td><div class="summary">
            Base class for composable visitors.
            </div></td></tr></table></div></div></div></div></div></div></div></div><div id="disqus_thread" /><script type="text/javascript">
    var disqus_shortname = 'epic-net'; // required: replace example with your forum shortname

    // The following are highly recommended additional parameters. Remove the slashes in front to use.
    var disqus_identifier = document.getElementById('metaFilename').content;
    var disqus_url = 'http://epic.tesio.it/doc/api/html/'+disqus_identifier+'.htm';
    var disqus_title = "Epic";
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a><div id="epic-footer"><div class="epic-copyright">Copyright © 2010-2012 Giacomo Tesio</div></div></body></html>