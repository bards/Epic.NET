<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>SimulateAcceptFor Method (expression, visitor, context)</title><link rel="stylesheet" type="text/css" href="../styles/layout.css" /><link rel="stylesheet" type="text/css" href="../styles/screen.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" id="metaFilename" content="M_Epic_UnvisitableExtensions_SimulateAcceptFor__2" /><link rel="icon" href="/favicon.ico" /><link rel="alternate" type="application/atom+xml" title="Development log" href="/atom.xml" /><!--[if !IE 7]>
    <style type="text/css">
		#epic-wrap {display:table;height:100%}
	</style>
  <![endif]--><!--[if lt IE 8]>
    <style type="text/css">
        #epic-header {padding-top: 9px}
    </style>
  <![endif]--><!--[if IE 8]>
    <style type="text/css">
		#epic-wrap {width:100%}
	</style>
  <![endif]-->
</head><body><div id="epic-wrap"><div id="epic-header"><a href="https://github.com/bards/Epic.NET"><img style="position: absolute; top: 0; left: 0; border: 0;" src="http://s3.amazonaws.com/github/ribbons/forkme_left_orange_ff7600.png" alt="Fork me on GitHub" /></a><a class="title" href="/">Epic</a><span>dominant domains</span></div><div id="epic-main"><div id="epic-content"><ul class="epic-menu"><li><a href="/index.html">Overview</a></li><li><a href="/roadmap.html">Roadmap</a></li><li><a href="/blog.html" title="Development blog">Blog</a></li><li><a href="/doc/index.html">Documentation</a></li><li><a href="https://github.com/bards/Epic.NET/archives/master">Download</a></li><li><a href="/license.html">License</a></li><li><a href="/credits.html">Bards</a></li></ul><div id="epic-api"><div id="control"><div id="toolbar"><span id="chickenFeet"><a href="R_Project_Documentation.htm">API</a> ► <a href="N_Epic.htm">Epic</a> ► <a href="T_Epic_UnvisitableExtensions.htm">UnvisitableExtensions</a> ► <span class="selflink">SimulateAcceptFor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TResult, TBaseClass<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>(TBaseClass, IVisitor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TResult<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, IVisitContext)</span></span></div><br /><span class="topicTitle">SimulateAcceptFor<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="typeparameter">TResult</span>, <span class="typeparameter">TBaseClass</span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span> Method (expression, visitor, context)</span></div><div id="main"><span style="color: DarkGray"></span><div class="summary">
            Allows the Epic.NET users to define their own Accept extension method for type hierarchies 
            that do not implement <a href="T_Epic_IVisitable.htm">IVisitable</a>.
            </div><p style="padding-bottom:20px;"><b>Assembly</b>: <span sdata="assembly">Epic.Prelude</span></p><div class="section"><div class="sectionTitle">Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">static</span> TResult <span class="identifier">SimulateAcceptFor</span>&lt;TResult, TBaseClass&gt;(
	TBaseClass <span class="parameter">expression</span>,
	<a href="T_Epic_IVisitor_1.htm">IVisitor</a>&lt;TResult&gt; <span class="parameter">visitor</span>,
	<a href="T_Epic_IVisitContext.htm">IVisitContext</a> <span class="parameter">context</span>
)
<span class="keyword">where</span> TBaseClass : <span class="keyword">class</span>
</pre></div></div></div></div></div><div class="section"><div class="sectionTitle">Generic Template Parameters</div><div class="sectionContent"><dl><dt><span class="parameter">TResult</span></dt><dd>Type of the result of the visit.</dd><dt><span class="parameter">TBaseClass</span></dt><dd>Type of the base class of the hierarchy. It cannot be <span class="nolink">Object</span>.</dd></dl></div></div><div id="parameters"><div class="section"><div class="sectionTitle">Parameters</div><div class="sectionContent"><dl paramName="expression"><dt><span class="parameter">expression</span> (<span class="selflink"><span class="typeparam">TBaseClass</span></span>)</dt><dd>Instance of <span class="typeparameter">TBaseClass</span> to visit.</dd></dl><dl paramName="visitor"><dt><span class="parameter">visitor</span> (<a href="T_Epic_IVisitor_1.htm">IVisitor</a><span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span><span class="selflink"><span class="typeparam">TResult</span></span><span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span>)</dt><dd>
            Visitor.
            </dd></dl><dl paramName="context"><dt><span class="parameter">context</span> (<a href="T_Epic_IVisitContext.htm">IVisitContext</a>)</dt><dd>
            Context of the visit.
            </dd></dl></div></div></div><div class="section"><div class="sectionTitle">Return Value</div><div class="sectionContent">
            Result of the visit.
            </div></div><div class="section"><div class="sectionTitle">Examples</div><div class="sectionContent">
            The following code shows how to make an existing class hierachy visitable without any change
            to the existing code.
            <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-lineno"> 1</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">abstract</span> <span class="highlight-keyword">class</span> Animal { }
<span class="highlight-lineno"> 2</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 3</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Mammal : Animal { }
<span class="highlight-lineno"> 4</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 5</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Human : Mammal { }
<span class="highlight-lineno"> 6</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 7</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> Cat : Mammal { }
<span class="highlight-lineno"> 8</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>
<span class="highlight-lineno"> 9</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> VisitableAnimals
<span class="highlight-lineno">10</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>{
<span class="highlight-lineno">11</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> TResult Accept&lt;TResult&gt;(<span class="highlight-keyword">this</span> Animal animal, IVisitor&lt;TResult&gt; visitor, IVisitContext context)
<span class="highlight-lineno">12</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    {
<span class="highlight-lineno">13</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>        <span class="highlight-keyword">return</span> UnvisitableExtensions.SimulateAcceptFor&lt;TResult, Animal&gt;(animal, visitor, context);
<span class="highlight-lineno">14</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>    }
<span class="highlight-lineno">15</span><span class="highlight-lnborder"></span><span class="highlight-spacerShort"></span>}</pre></div></span></div></div><div class="section"><div class="sectionTitle">Exceptions</div><div class="sectionContent"><table class="exceptions"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><span class="nolink">ArgumentNullException</span></td><td><span class="parameter">expression</span>, <span class="parameter">visitor</span> or <span class="parameter">context</span> is <span class="keyword"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span>.<br /></td></tr></table></div></div></div></div></div></div></div><div id="disqus_thread" /><script type="text/javascript">
    var disqus_shortname = 'epic-net'; // required: replace example with your forum shortname

    // The following are highly recommended additional parameters. Remove the slashes in front to use.
    var disqus_identifier = document.getElementById('metaFilename').content;
    var disqus_url = 'http://epic.tesio.it/doc/api/html/'+disqus_identifier+'.htm';
    var disqus_title = "SimulateAcceptFor Method (expression, visitor, context)";
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a><div id="epic-footer"><div class="epic-copyright">Copyright © 2010-2012 Giacomo Tesio</div></div></body></html>